name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests

      # Step 4: Run Linting
      - name: Lint Code with Flake8
        run: |
          pip install flake8
          flake8 --max-line-length=120 .

      # Step 5: Run a basic test to check for execution errors
      - name: Run Basic Test
        run: |
          python -m tkinter || echo "Tkinter is not available in this environment"
          python -c "import requests"

  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    if: success()  # Only run deployment if tests pass

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests pyinstaller

      # Step 4: Build executable with PyInstaller
      - name: Build Executable
        run: |
          pyinstaller --onefile --windowed project_activity3.py

      # Step 5: Upload Artifact (Executable)
      - name: Upload Executable
        uses: actions/upload-artifact@v3
        with:
          name: project_activity3_executable
          path: dist/project_activity3.exe

      # Step 6: Create GitHub Release (Optional)
      # Uncomment the following lines if you want to create a release automatically

      # - name: Create GitHub Release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: v1.0.0
      #     release_name: "Project Activity 3 v1.0.0"
      #     draft: false
      #     prerelease: false

      # - name: Upload Executable to Release
      #   uses: actions/upload-release-asset@v1
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: dist/project_activity3.exe
      #     asset_name: project_activity3.exe
      #     asset_content_type: application/octet-stream
